'''
# 파이썬에서 사용하는 진수 변환 함수
# - bin() : 주어진 값을 2진수로 변환 표현
# - oct() : 주어진 값을 8진수로 변환 표현
# - hex() : 주어진 값을 16진수로 변환 표현

# 변환 함수 사용 예
print(bin(123))         # 0b1111011
print(oct(0b1111011))   # 0o173
print(hex(0o173))       # 0x7b

# 파이썬의 내장함수
# 1. 최대값을 구하는 max()
# 2. 최소값을 구하는 min()
# 3. 주어진 값의 합을 구하는 sum()
# 4. 제곱승수 값을 구하는 pow()
# 5. 나누기를 구하는 divmod()

# max()
print(max(10,4,-7,5,9,13,-1,8))     # 13 
# min()
print(min(10,4,-7,5,9,13,-1,8))     # -7
# sum()
print(sum([10,4,-7,5,9,13,-1,8]))   # 41
# pow()
print(pow(10,3))                    # 1000
# divmod()
print(divmod(10,3))                 # (3,1) => (몫,나머지)

# 서식문자
# : 서식문자는 문자열에서 특정 값을 표현하는 문자 약식 
# 
#  C언어    파이썬3           설명
#   %s      {}              문자열을 출력
#   %d      {}              정수를 출력
#           {:b}            표현식(0b) 없는 2진수 값 출력
#   %o      {:o}            표현식(0o) 없는 8진수 값 출력
#   %x      {:x}            표현식(0x) 없는 16진수 값 출력
#   %f      {:f}            실수를 출력 
#   %.2f    {:.2f}          소수점 2자리까지 출력
#   %6d     {:6}            6자리 고정자리 출력
#  

# 문자열과 정수 출력 
print('%s : %d' % ('나이',30))      # 나이 : 30
print('{} : {}'.format('나이',30))  # 나이 : 30

# 실수 출력
print('%f, %.2f' % (1.1234,1.1234)) # 1.123400, 1.12
print('{:f}, {:.2f}'.format(1.1234,1.1234))

# 진법 출력 예시
print('%o, %x, %X' % (10,10,10))    # 12 , a , A
print('{:b}, {:o}'.format(10,10))
print('{:x}, {:X}'.format(10,10))

# 고정길이 출력
print('|%5d|' % 123)
print('|%5s|' % 'abc')
print('|{:5}|'.format(123))
print('|{:5}|'.format('abc'))

# 고정길이 출력2(정렬)
print('|%-5d|' % 123)           #왼쪽
print('|%5s|' % 'abc')          #오른쪽

print('|{:<5}|'.format(123))    #왼쪽    
print('|{:>5}|'.format('abc'))  #오른쪽
print('|{:^5}|'.format('abc'))  #가운데

# 고정길이 출력3(여백채우기)
print('|%05d|' % 123)           # 비어있는 여백을 숫자 0으로 채움
print('|{:05}|'.format(123))

print('|{:_>5}|'.format('abc')) # __abc
print('|{:-^5}|'.format('abc')) # -abc-

# 정수, 실수 단위 구분
print('{:,}'.format(1000000000))
print('{:,.2f}'.format(1000000000))
'''
print("파이썬 서식문자 활용 문제")
print("="*68)
print('{:^62}'.format("파이썬 쇼핑몰"))
print('{:3}: {:<58}'.format('번호',1078718855))
print('{:3}: {:52}'.format('주소','서울시 종로구 종로3가'))
print('{:3}: {:<58}'.format('성명','김사장'))
print('{:3}: {:<58}'.format('전화','070-1234-5678'))
print('-'*68)
print('{:^20}{:^11}{:^11}{:^18}'.format("품명","단가","수량","금액"))
print('-'*68)
print('{:^14}{:11,}{:11,}{:24,}'.format("블루투스 이어폰",85000,1,85000))
print('{:^20} {:11,}{:11,}{:24,}'.format("USB3.0 8G",8000,1,8000))
print('-'*68)
print('{:3}{:62,}'.format('소 계',85000+8000))
print('-'*68)
print('{:11}{:52,}'.format('청구금액',85000+8000))
print('{:11}{:52,}'.format('받은금액',100000))
print('{:11}{:52,}'.format('거스름돈',100000-(85000+8000)))
print('-'*68)

# 변수(Variable)
#  : 다양한 데이터를 저장하는 공간(메모리)
#   저장한 값은 언제든지 다시 사용이 가능하고, 경우에 따라서 기존의
#   데이터를 덮어 씌울수도 있다.(변경가능) 

# 변수의 명명법(작명 규칙)
# 1. 영문자, 숫자, 언더바(_)로 구성됨(한글도 됨.)
# 2. 영문 대소문자는 구분  ex) sum, Sum, sUm, suM, SUM
# 3. 변수명의 시작은 문자와 언더바를 사용(숫자는 안됨)
# 4. 변수명에 띄어쓰기는 사용할 수 없다. ex) str name(x), str_name(o)
# 5. python 예약어는 사용이 불가능함. 
#    예약어란? 프로그램이 미리 사용하고 있는 언어(단어)  ex) 명령어들... 
# 
# 변수의 정의(형식)
#  변수명 = 값(하나의 변수 처리)
#  변수명1 , 변수명2 = 값1 , 값2  (변수명1 = 값1 ; 변수명2 = 값2)
#  변수명1 = 변수명2 = 값1
#  
x = 10  # 변수의 선언
y = 20
z = x + y
print('{} + {} = {}'.format(x,y,z))


