# 0218 파이썬 1day
#주석 예시
# print("HEllo python1")
# #print("HEllo python2")
# print("HEllo python3")

# 주석 예시
# ''' 
# print("HEllo python1")
# print("HEllo python2")
# print("HEllo python3")
# print("HEllo python4")
# print("HEllo python5")
# '''  
# print("HEllo python6")
# 주석 설명
'''
└> 프로그램에 대한 comment를 달기 위해서 
└> 왜 이 코드를 작성했는지 언제, 누가 작성을 했는지
└> 동작은 어떻게 되는 것인지를 기술해준것
'''

    # 파이썬의 특성
 # 1. 가독성 : 프로그램 코드 간결하고, 가독성 높다.
 #            코드블럭을 들여쓰기로 구분한다'★'
 #                (=동작인 영역에서 동작하는 코드 모음 (들여쓰기) → 코드를 맨앞에 붙여쓰기)
 # 2, 풍부한 라이브러리 : 매우 광범위한 라이브러리를 가짐, 외부 라이브러리가 매우 풍부 해서 확장 가능
 #                (=다양한 동작을 하는 함수(클레스=특정기능들을 묶어놈)들)
 # 3, 접착성 : 쉽게 라이브러리를 추가할 수 있고 파이썬에 c로 구현된 부분을 사용가능, c에서 파이썬을 사용가능 
 # 4, 무료   : 파이썬제단에서 관리, 거의 무료
 # 5, 유니코드를 지원 : 파이썬에서는 문자열을 모두 유니코드로 사용함
 #                (=문자를 표현하는 값, 다양한 언어와 문자를 표시하는 방법)
 # 6, 동적 타이핑 : 런타임 시에 타입을 체크하는 동적타이핑을 지원함 
 #                (=메모리 관리를 자동으로 처리함)
 
# 파이썬을 사용하는 프로젝트 ex) Bittorrent, Youtube, Google,
# 
# 파이썬 2.x ↔ 3.x 차이점) 
# 1_ print가 함수로 변경됨 
# ("" . '') → 따옴표를 붙이면 문자열로 나타냄, 2.x 에서는 명령어(=괄호x), 3.x에서는 함수화(=괄호O)
#
# 2_ long(=큰숫자를 표시할때 사용) 자료형이 없어지고, int형으로 통일 
#   2.x )
# type(2**31)
# <type 'Long'>
#   3.x )
# type(2**31)
# class(int')


#'int/int' 의 결과 값 flont으로 처리.
#    2.x )
# 3/2
#   1 (=몫1 나머지1 출력은 몫만)
#    3.x ) 
# 3/2  
# 1.5 (실수값을 표현해줌 = 더 정확) 
# class'floot'

# string, unicode 체계 변경
# 문자가 그대로 나오다가 문자를 다른형태로 바꿀수있는 형태로 변경

#=====================================================================================================
# ＊이스케이프 문자 ('\'사용)
#  └> 특수한 의미를 가지고 있는 문자를 출력하기 위한 기능
#       1,  '\n' : 줄바꿈 문자(개행문자 = 다음줄로 출력)
#             -> print("오늘 아침 날씨가 쌀쌀해요\n그래서 배고파요!!")  → 2줄생성 
#       2,  '\r' : 해당 줄의 처음으로 커서를 이동 = 커서위치 변경
#             -> print("오늘 아침은 날씨가 춥데요")
#             -> print("내일")
#             -> print("오늘도 아침은 날씨가 춥데요\r내일") → "내일 아침은 날씨가 춥데요" 
#       3,  '\t' : 탭만큼 커서를 이동, tab = 8칸 간격마다 공백을 만듬 
#             -> print('오늘도\t여러분을\t봐서\t기분이\t좋네요')
#       4,  '\'' : ' 문자 → 문자열을 나타낼때 사용 (c언어 = 문자)
#       5,  '\"' : " 문자 → (c언어 = 문자열)
#       6,  '\\' : \ 문자 
#             -> print("오늘 아침에 \"기분\"이 정말 좋았어요!!") → 문자열 내부에 문자표현시에는 \\를 사용하는게 좋음


# ＊파이썬을 이용한 간단한 연산 처리
# print(3+10)
# print(10-3)
# # print(10*3)
# print(10/3)
# print("10더하기 20의 결과는 : ",10+20)
# print("3 곱하기 9의 결과는 :", 3*9)

#         # 실습
# print("\t#### 회비 정보 #### \n"
#          "=================================================="
#          "\n이름\t나이\t전화번호\t회비\t"
#          "\n=================================================="
#          "\n김동완\t38\t010-1111-1111\t￦20,000"
#          "\n서지수\t24\t010-1234-5678""\t￦30,000"
#          "\n이지은\t25\t""010-""2525-""2345""\t￦50,000" # → 문제 : 따옴표
#          "\n--------------------------------------------------"
#          "\n총합계\t\t\t\t￦100,000"
#          "\n==================================================")


# print(' '*15,'### 회비 정보 ###', '\n', '='*48,'\n') # → *숫자 = ' ' 따옴표 안에 들어간 문자를 곱한다
# print('이지은\t\t25\t010-1111-1111\t \\30.000') # → \\ 두개로 ￦ 만듦


# ※진법
# = 수를 표현하는 방식 중에 하나로 정해진 수의 묶음으로 표현하는 방식
#   컴퓨터는 2진법 사용
#             2진법  : 0 ~ 1                              파이썬 표현식 : 0b
#             8진법  : 0 ~ 7                              파이썬 표현식 : 0o
#             10진법 : 0 ~ 9                              파이썬 표현식 : 없음(그냥 사용)
#             16진법 : 0 ~ 9, a ~ f                       파이썬 표현식 : 0x

print("2진수 100을 10진수로 출력 →", 0b100)
print("8진수 100을 10진수로 출력 →", 0o100)
print("16진수 100을 10진수로 출력 →", 0x100)
print(0x7b)