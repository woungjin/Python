'''
# (6) 비트 연산자 
#  : 두 피연산자의 bit값을 가지고 연산하는 연산자들... 
# 
#  "&" : 두 피연산자의 and bit 연산하는 연산자... 
#                128 64 32 16  8  4  2  1
#       10 & 6  => 0  0  0  0  1  0  1  0 (10)
#                & 0  0  0  0  0  1  1  0 (6)
#               ==============================
#                  0  0  0  0  0  0  1  0 (2)   
#
#  "|" : 두 피연산자의 or bit 연산하는 연산자 ... 
#       10 | 6  => 0  0  0  0  1  0  1  0 (10)
#                | 0  0  0  0  0  1  1  0 (6)
#               ==============================
#                  0  0  0  0  1  1  1  0 (14)  
#   
#  "~" : 우측 피연산자에 대한 not bit 연산하는 연산자...(보수???)
#           ~ 0 => 0  0  0  0  0  0  0  0    (0)
#               ==============================
#                  1  1  1  1  1  1  1  1    (-1)
# 
#  "^" : 두 피연산자에 대한 XOR(배타적 논리합) bit 연산하는 연산자
#        이 연산자를 사용하여 암호화에 주로 사용이 됨.
#        두 피연산자 중에 하나가 "참"이면 "참"을 반환함. 
#        두 피연산자가 둘다 "참" 또는 "거짓"이면 "거짓"을 반환
#
#       10 ^ 6  => 0  0  0  0  1  0  1  0 (10)
#                ^ 0  0  0  0  0  1  1  0 (6)
#               ==============================
#                  0  0  0  0  1  1  0  0 (12)  
#  쉬프트(이동) 연산자...
#  "<<" : 왼쪽 피연산자의 비트를 오른쪽 연산자의 값 만큼 이동(왼쪽으로)
#        (비트를 이용한 2의 배수관계로의 곱셈) 
#       10 << 2 => 0  0  0  0  1  0  1  0 (10)
#                <<                       (2)
#               ==============================
#                  0  0  1  0  1  0  0  0 (40)  
#  ">>" : 왼쪽 피연산자의 비트를 오른쪽 연산자의 값 만큼 이동(오른쪽으로)
#       (비트를 이용한 2의 배수관계를 이용한 나눗셈(정수 나눗셈))
#       10 >> 2 => 0  0  0  0  1  0  1  0 (10)
#                >>                       (2)
#               ==============================
#                  0  0  0  0  0  0  1  0 (2)         
print(10&6)
print(10|6)
print(~0)
print(10^6)
print(10<<2)
print(10>>2)

# (7) 기타 연산자
#  "="  : 대입 연산자  => 왼쪽 피연산자에 오른쪽 피연산자를 대입
#  (복합 대입 연산자)
#  : 복합 대입 연산자란? 대입 연산자와 산술 연산자를 합쳐서 사용하는 연산자
#   "+=" , "-=" , "*=" , "/=" ... 등 산술연산자와 대입 연산자를 합쳐 사용
#  의미는 왼쪽 피연산자에 오른쪽 피연산자의 산술계산 후 대입한다는 의미 
a = 0
a += 10     # a = a + 10   , a = 10
print(a)
a -= 5      # a = a - 5    , a = 5
print(a)
a *= 5      # a = a * 5    , a = 25
print(a)
a //= 5    # a = a // 5    , a = 5
print(a)
a %= 3      # a = a % 3    , a = 2
print(a)
a /= 2      # a = a / 2    , a = 1.0
print(a)

# 문제] 다음에 대한 답을 적으세요. 
# 1) 7 > 18 참 or 거짓?
# 2) 5<2 참 or 거짓?
# 3) 6 % 3 > 2 참 or 거짓?
# 4) 5+5 != 2*5 참 or 거짓?
# 5) True == 1 참 or 거짓? 
# 6) 1 == '1' 참 or 거짓?
# 7) 10 // 3 == 10 % 3 참 or 거짓?  
# 8) 15 % 4 in (0,1,2) 참 or 거짓?

 
# 조건문(if)
#  if (조건 분기문)
#  - 조건식이 참인 경우에는 if의 종속문장을 실행
#  - 참이 아닌 경웅에는 if 종속문장은 실행하지 않음
#  - if 종속문장을 작성할 경우, "반드시"(***) tab을 통해서 들여쓰기 하자!!
#   
#  (형식)
#  if (조건문):
#      if 종속문장1
#      if 종속문장2
#      ... 
#  (메인 프로그램 실행 코드) 
#

# if 들여쓰기 잘못된 예
num = int(input("정수 입력 : "))
if num == 1:   #(if 종속문자을 입력 요구)
#print("1입력")  # IndentationError 가 발생함. 
#정상 적인 들여쓰기
    print("1입력") # if 종속문장

# 예제1] 입력값을 받아서 홀수/짝수 구문하는 예제
num1=int(input("정수 입력 : "))
if num1%2 == 0: #짝수 이거나 2의 배수인 경우
    print("num1의 변수 값은 짝수입니다.!!!")
    print("num1의 변수 값은 2의 배수입니다.!!!")
if num1%2 == 1: # 홀수 
    print("num1의 변수 값은 홀수 입니다.!!!")
print("프로그램 종료")

# 예제2] 메뉴 선택시 동작을 시키는 프로그램
print("====== 메뉴 ======")
print(" 1.Easy Game Start")
print(" 2.Hard Game Start")
print(" 3.Exit")
num2 = int(input("번호 선택>>>"))
if num2 == 1:
    print("Easy Game Starting.... ")
if num2 == 2:
    print("Hard Game Starting.... ")
if num2 == 3:
    print("Game Exit.... ")

# 예제3] 입력값을 받아서 입력값이 1이면, "1입력"을 출력
#       10보다 큰 값을 입력하면, "10보다 큰 값을 입력했습니다."
#       10보다 작은 값을 입력하면, "10보다 작은 값을 입력했습니다."
num3 = int(input("정수 입력 : "))
if num3 == 1 :
    print("1입력")
if num3 > 10 :
    print("10보다 큰 값을 입력했습니다.")
if num3 != 1 and num3 < 10 : 
    print("10보다 작은 값을 입력했습니다.")

# 예제4] 멤버연산자와 식별 연산자를 이용한 if
x = 15
if x in (10,11,15):
    print("x변수의 값은 Members에 속해 있습니다.")
if type(x) is int:
    print("x변수의 값은 int형 자료입니다.")

# if ~ else 조건 구문
#  : 의미는 if조건문에 대해서 참이면, if 조건문의 종속문장을 실행하고
#   거짓이면 else 종속문장을 실행한다. 
# 
# (형식)
# if (조건식):
#     if종속문장1
#     if종속문장2
#     ...
# else:
#     else종속문장1
#     else종속문장2
#     ... 
# (메인 프로그램 실행 코드)
# 

# 예제5] 입력값을 받아서 받은 입력값이 10보다 크고, 15보다 작은 경우
#       "10보다 크고 15보다 작은 값 입력", 이외의 모든 값에 대해서는
#       "범위를 벗어난 값 입력!!" 출력하는 예제
num5 = int(input("정수 입력 : "))
if  num5 > 10 and num5 < 15:
    print("10보다 크고 15보다 작은 값 입력")
else:
    print("범위를 벗어난 값 입력!!")

# 예제6] 수를 입력 받아 100이면 "100입력", 이외에는 "100이외의 값 입력"
num6 = int(input("정수 입력 : "))
if num6 == 100:
    print("100입력")
else :
    print("100이외의 값 입력")
'''

# pass 명령어
# : if나 함수 등 종속문장을 사용하여 정의, 기술해야 하는 경우
#  해당 내용을 나중에 정의하고자 하는 목적으로 사용하는 명령어.
#  (종속문장이 없으면 Error을 출력. 다른 code테스트가 안됨. 때문에...)   


num6 = int(input("정수 입력 : "))
if num6 == 100:
    pass        # 100입력시 출력 내용
else :
    print("100이외의 값 입력")

# if구문 문제
# 1. 입력 받은 데이터가 3의 배수인 경우 출력하는 코드 작성
su1 = int(input("정수 입력 : "))
if su1 % 3 == 0 :
    print("입력하신 {}은 3의 배수 입니다.".format(su1))
else:
    print("입력하신 {}는 3의 배수가 아닙니다.".format(su1))
# 2. 절대값 구하는 프로그램을 만드세요.
su2 = int(input("정수 입력 : "))
if su2 < 0: su2 = -(su2); print("입력값의 절대값은 {}입니다.".format(su2))
else: print("입력값의 절대값은 {}입니다.".format(su2))


eval()